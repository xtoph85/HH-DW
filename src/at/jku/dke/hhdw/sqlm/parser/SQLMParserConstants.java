/* Generated By:JJTree&JavaCC: Do not edit this line. SQLMParserConstants.java */
package at.jku.dke.sqlm.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SQLMParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LINE_COMMENT = 5;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int K_BEGIN = 7;
  /** RegularExpression Id. */
  int K_END = 8;
  /** RegularExpression Id. */
  int K_CREATE = 9;
  /** RegularExpression Id. */
  int K_K_ALTER = 10;
  /** RegularExpression Id. */
  int K_DROP = 11;
  /** RegularExpression Id. */
  int K_UPDATE = 12;
  /** RegularExpression Id. */
  int K_DIMENSION = 13;
  /** RegularExpression Id. */
  int K_HIERARCHY = 14;
  /** RegularExpression Id. */
  int K_OBJECT = 15;
  /** RegularExpression Id. */
  int K_OBJECTS = 16;
  /** RegularExpression Id. */
  int K_MULTILEVEL = 17;
  /** RegularExpression Id. */
  int K_CUBE = 18;
  /** RegularExpression Id. */
  int K_FACT = 19;
  /** RegularExpression Id. */
  int K_IN = 20;
  /** RegularExpression Id. */
  int K_AT = 21;
  /** RegularExpression Id. */
  int K_LEVEL = 22;
  /** RegularExpression Id. */
  int K_UNDER = 23;
  /** RegularExpression Id. */
  int K_CHILD = 24;
  /** RegularExpression Id. */
  int K_OF = 25;
  /** RegularExpression Id. */
  int K_NULL = 26;
  /** RegularExpression Id. */
  int K_DIMENSIONS = 27;
  /** RegularExpression Id. */
  int K_BETWEEN = 28;
  /** RegularExpression Id. */
  int K_CONNECTION = 29;
  /** RegularExpression Id. */
  int K_ADD = 30;
  /** RegularExpression Id. */
  int K_ATTRIBUTE = 31;
  /** RegularExpression Id. */
  int K_MEASURE = 32;
  /** RegularExpression Id. */
  int K_SET = 33;
  /** RegularExpression Id. */
  int K_DEFAULT = 34;
  /** RegularExpression Id. */
  int K_SHARED = 35;
  /** RegularExpression Id. */
  int K_SUM = 36;
  /** RegularExpression Id. */
  int K_AVG = 37;
  /** RegularExpression Id. */
  int K_MIN = 38;
  /** RegularExpression Id. */
  int K_MAX = 39;
  /** RegularExpression Id. */
  int K_SET_UNION = 40;
  /** RegularExpression Id. */
  int K_BULK = 41;
  /** RegularExpression Id. */
  int K_SELECT = 42;
  /** RegularExpression Id. */
  int K_FROM = 43;
  /** RegularExpression Id. */
  int K_WHERE = 44;
  /** RegularExpression Id. */
  int K_LIKE = 45;
  /** RegularExpression Id. */
  int K_DICE = 46;
  /** RegularExpression Id. */
  int K_ROLLUP = 47;
  /** RegularExpression Id. */
  int K_CONVERT = 48;
  /** RegularExpression Id. */
  int K_TO = 49;
  /** RegularExpression Id. */
  int K_CONVERT_TO = 50;
  /** RegularExpression Id. */
  int K_AND = 51;
  /** RegularExpression Id. */
  int K_OR = 52;
  /** RegularExpression Id. */
  int K_VARCHAR2 = 53;
  /** RegularExpression Id. */
  int K_NUMBER = 54;
  /** RegularExpression Id. */
  int K_DISTINCT = 55;
  /** RegularExpression Id. */
  int K_ANY = 56;
  /** RegularExpression Id. */
  int K_ALL = 57;
  /** RegularExpression Id. */
  int K_START = 58;
  /** RegularExpression Id. */
  int K_CONNECT = 59;
  /** RegularExpression Id. */
  int K_WITH = 60;
  /** RegularExpression Id. */
  int K_BY = 61;
  /** RegularExpression Id. */
  int K_GROUP = 62;
  /** RegularExpression Id. */
  int K_ORDER = 63;
  /** RegularExpression Id. */
  int K_HAVING = 64;
  /** RegularExpression Id. */
  int K_MINUS = 65;
  /** RegularExpression Id. */
  int K_INTERSECT = 66;
  /** RegularExpression Id. */
  int K_UNION = 67;
  /** RegularExpression Id. */
  int K_ASC = 68;
  /** RegularExpression Id. */
  int K_DESC = 69;
  /** RegularExpression Id. */
  int K_FOR = 70;
  /** RegularExpression Id. */
  int K_NOT = 71;
  /** RegularExpression Id. */
  int K_EXISTS = 72;
  /** RegularExpression Id. */
  int K_PRIOR = 73;
  /** RegularExpression Id. */
  int K_IS = 74;
  /** RegularExpression Id. */
  int K_JOIN = 75;
  /** RegularExpression Id. */
  int K_ON = 76;
  /** RegularExpression Id. */
  int K_USING = 77;
  /** RegularExpression Id. */
  int K_FULL = 78;
  /** RegularExpression Id. */
  int K_LEFT = 79;
  /** RegularExpression Id. */
  int K_RIGHT = 80;
  /** RegularExpression Id. */
  int K_INNER = 81;
  /** RegularExpression Id. */
  int K_OUTER = 82;
  /** RegularExpression Id. */
  int S_NUMBER = 83;
  /** RegularExpression Id. */
  int FLOAT = 84;
  /** RegularExpression Id. */
  int INTEGER = 85;
  /** RegularExpression Id. */
  int DIGIT = 86;
  /** RegularExpression Id. */
  int S_IDENTIFIER = 87;
  /** RegularExpression Id. */
  int LETTER = 88;
  /** RegularExpression Id. */
  int SPECIAL_CHARS = 89;
  /** RegularExpression Id. */
  int S_BIND = 90;
  /** RegularExpression Id. */
  int S_CHAR_LITERAL = 91;
  /** RegularExpression Id. */
  int S_QUOTED_IDENTIFIER = 92;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "\"BEGIN\"",
    "\"END\"",
    "\"CREATE\"",
    "\"ALTER\"",
    "\"DROP\"",
    "\"UPDATE\"",
    "\"DIMENSION\"",
    "\"HIERARCHY\"",
    "\"OBJECT\"",
    "\"OBJECTS\"",
    "\"MULTILEVEL\"",
    "\"CUBE\"",
    "\"FACT\"",
    "\"IN\"",
    "\"AT\"",
    "\"LEVEL\"",
    "\"UNDER\"",
    "\"CHILD\"",
    "\"OF\"",
    "\"NULL\"",
    "\"DIMENSIONS\"",
    "\"BETWEEN\"",
    "\"CONNECTION\"",
    "\"ADD\"",
    "\"ATTRIBUTE\"",
    "\"MEASURE\"",
    "\"SET\"",
    "\"DEFAULT\"",
    "\"SHARED\"",
    "\"SUM\"",
    "\"AVG\"",
    "\"MIN\"",
    "\"MAX\"",
    "\"SET_UNION\"",
    "\"BULK\"",
    "\"SELECT\"",
    "\"FROM\"",
    "\"WHERE\"",
    "\"LIKE\"",
    "\"DICE\"",
    "\"ROLLUP\"",
    "\"CONVERT\"",
    "\"TO\"",
    "\"CONVERT_TO\"",
    "\"AND\"",
    "\"OR\"",
    "\"VARCHAR2\"",
    "\"NUMBER\"",
    "\"DISTINCT\"",
    "\"ANY\"",
    "\"ALL\"",
    "\"START\"",
    "\"CONNECT\"",
    "\"WITH\"",
    "\"BY\"",
    "\"GROUP\"",
    "\"ORDER\"",
    "\"HAVING\"",
    "\"MINUS\"",
    "\"INTERSECT\"",
    "\"UNION\"",
    "\"ASC\"",
    "\"DESC\"",
    "\"FOR\"",
    "\"NOT\"",
    "\"EXISTS\"",
    "\"PRIOR\"",
    "\"IS\"",
    "\"JOIN\"",
    "\"ON\"",
    "\"USING\"",
    "\"FULL\"",
    "\"LEFT\"",
    "\"RIGHT\"",
    "\"INNER\"",
    "\"OUTER\"",
    "<S_NUMBER>",
    "<FLOAT>",
    "<INTEGER>",
    "<DIGIT>",
    "<S_IDENTIFIER>",
    "<LETTER>",
    "<SPECIAL_CHARS>",
    "<S_BIND>",
    "<S_CHAR_LITERAL>",
    "<S_QUOTED_IDENTIFIER>",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\";\"",
    "\"<\"",
    "\">\"",
    "\".\"",
    "\"=\"",
    "\"[\"",
    "\"]\"",
    "\"*\"",
    "\">=\"",
    "\"<=\"",
    "\"+\"",
    "\"-\"",
    "\".*\"",
    "\"||\"",
    "\"/\"",
    "\"**\"",
  };

}
